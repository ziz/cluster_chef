#!/usr/bin/env bash
progresslog='/tmp/user_data-progress.log'
mkdir -p /tmp ; chmod a+rwx /tmp

# A url directory with the scripts you'd like to stuff into the machine
REMOTE_FILE_URL_BASE="<%= bootstrap_scripts_url_base %>"

echo "`date` Broaden the apt universe" >> $progresslog
add-apt-repository 'deb http://archive.canonical.com/       <%= ubuntu_version %> partner'
add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu <%= ubuntu_version %> universe multiverse'
add-apt-repository 'deb http://apt.opscode.com/             <%= ubuntu_version %> main'
curl http://apt.opscode.com/packages@opscode.com.gpg.key | sudo apt-key add -

# wait for system dpkg to finish
while sudo fuser /var/lib/dpkg/lock ; do echo "`date` Waiting for apt to become free" >> $progresslog ;  sleep 5 ; done  

# Do a non interactive apt-get so the user is never prompted for input
export DEBIAN_FRONTEND=noninteractive

# Update package index and update the basic system files to newest versions
echo "`date` Apt update"  >> $progresslog 
apt-get -y update  ;
dpkg --configure -a
echo "`date` Apt upgrade, could take a while"  >> $progresslog 
apt-get -y upgrade ;
echo "`date` Apt install"  >> $progresslog 
apt-get -f install ;

echo "`date` Installing base packages"  >> $progresslog 
apt-get install -y ruby ruby1.8-dev libopenssl-ruby1.8 rubygems ri irb build-essential wget ssl-cert git-core zlib1g-dev libxml2-dev runit runit-services;
echo "`date` Restarting runit (stupid Lucid bug? http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=595334)" >> $progresslog
dpkg-reconfigure runit >> $progresslog
kill -s HUP 1
dpkg-reconfigure runit >> $progresslog
echo "`date` Unchaining rubygems from the tyrrany of ubuntu"  >> $progresslog 
gem install --no-rdoc --no-ri rubygems-update --version=1.3.7 ; /var/lib/gems/1.8/bin/update_rubygems; gem update --no-rdoc --no-ri --system ; gem --version ;

echo "`date` Installing chef gems"  >> $progresslog 
gem install --no-rdoc --no-ri broham uuidtools configliere right_aws ;
gem list >> $progresslog

echo "`date` Hostname"  >> $progresslog 
# This patches the ec2-set-hostname script to use /etc/hostname (otherwise it
# crams the ec2-assigned hostname in there regardless)
cp /usr/bin/ec2-set-hostname /usr/bin/ec2-set-hostname.`date "+%Y%m%d%H"`.orig ;
wget --no-check-certificate -nv ${REMOTE_FILE_URL_BASE}/ec2-set-hostname_replacement.py -O /usr/bin/ec2-set-hostname ;
chmod a+x /usr/bin/ec2-set-hostname

# unscrewup the hostname every way I can think of. Rabbitmq is a real buttmunch
# about the hostname -- it will hang forever on bootstrap if `hostname -s`
# doesn't resolve back to this host. One of the following fixes this, not sure which.
export HOSTNAME=<%= hostname %> PUBLIC_IP=<%= public_ip %>                 
bash     -c "echo '$HOSTNAME' > /etc/hostname" ;
hostname -F /etc/hostname ;
sysctl   -w kernel.hostname=$HOSTNAME ;
# Your /etc/hosts needs to end up looking like this (order is important):
# 127.0.0.1      chef.YOURDOMAIN.COM chef localhost 
# XXX.XXX.XX.XX  chef.YOURDOMAIN.COM chef
sed -i "s/127.0.0.1 *localhost/127.0.0.1      $HOSTNAME `hostname -s` localhost/" /etc/hosts
if grep -q $PUBLIC_IP /etc/hosts  ; then true ; else bash -c "echo '$PUBLIC_IP $HOSTNAME `hostname -s ` chef.infinitemonkeys.info chef' >> /etc/hosts" ; fi

 echo "`date` Install chef gem"  >> $progresslog
sudo gem install --no-rdoc --no-ri chef
echo "`date` Bootstrap chef server"  >> $progresslog
echo '{ "chef": { "server_fqdn":"<%= chef_server_fqdn %>", "url_type":"http", "init_style":"runit", "server_port":"4000", "webui_port":"4040", "webui_enabled":true, "path":"/srv/chef", "serve_path":"/srv/chef" }, "run_list": [ "recipe[chef::bootstrap_server]" ] }' > /tmp/chef_server.json ;
wget --no-check-certificate -nv ${REMOTE_FILE_URL_BASE}/chef_bootstrap.rb -O /tmp/chef_bootstrap.rb ;
sudo stop runsvdir ;
chef-solo -c /tmp/chef_bootstrap.rb -j /tmp/chef_server.json  >> $progresslog

echo "`date` Pulling in chef client and server scripts"  >> $progresslog 
cp /etc/chef/client.rb /etc/chef/client-orig.rb ;
wget --no-check-certificate -nv ${REMOTE_FILE_URL_BASE}/client.rb -O /etc/chef/client.rb ;
cat > /etc/chef/client-config.json <<EOF
<%= chef_config[:attributes].to_json %>
EOF

echo "`date` Cleanup"  >> $progresslog 
apt-get autoremove;
updatedb;

echo "`date` User data script (chef server bootstrap) complete: `date`"  >> $progresslog 
